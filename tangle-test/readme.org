* Tangle Test Notebook
A notebook for testing Org's tangle features.

We will test the ability to:

- Tangle a block to a file.
- Tangle multiple blocks to one file.
- Control the order of blocks in the destination file.
- Tangle to multiple files from the same Org file.
- Specify the tangle destination file in various ways.
- Specify what to tangle vs. export.
- Tangle to one file from multiple Org files.

** About Source Blocks

There may be a cleaner way to do this, but I will include both the source blocks with their results and the org code for /making/ those source blocks. This is so that you can see its results and actually tangle it, as well as demonstrate how to do it in your own org files.

** Tangling To A File
The below source block will tangle the code inside it to `test-1.js`.

#+begin_src org
,#+begin_src js :tangle test-1.js
const greeting = "hi";
console.log(greeting);
,#+end_src
#+end_src

And here is the actual block, so that tangling works:

#+begin_src js :tangle test-1.js
const greeting = "hi";
console.log(greeting);
#+end_src

While visiting this buffer, simply run =org-babel-tangle= to tangle /all/ source blocks in the file to the file listed in their respective source block headers. (I've already done this in this repo.)

** Tangling Multiple Blocks To One File
The following block would /also/ tangle to =test-1.js=, but, since it comes second in this file, it will tangle after the first source block.

#+begin_src org
,#+begin_src js :tangle test-1.js
console.log("Welcome to literate programming!");
,#+end_src
#+end_src

And here is the actual block itself so we can tangle it.

#+begin_src js :tangle test-1.js
console.log("Welcome to literate programming!");
#+end_src

** Controlling Tangling Order
** Tangling To Multiple Files
We can also tangle different source blocks to different files. The =:tangle= header argument on each source block specifies which file to tangle to.

If you tangle these files (which I've already done in this repo), you'll have a =test-2.js= file with the lines of code from the first block and a =test-3.js= file with the code from the second.

#+begin_src org
,#+begin_src js :tangle test-2.js
const greeting = "oh hello";
console.log(greeting);
,#+end_src

,#+begin_src js :tangle test-3.js
const greeting = "oh hi there";
console.log(greeting);
,#+end_src
#+end_src

And here are the actual source blocks, so that a tangle on this file will actually tangle:

#+begin_src js :tangle test-2.js
const greeting = "oh hello";
console.log(greeting);
#+end_src

#+begin_src js :tangle test-3.js
const greeting = "oh hi there";
console.log(greeting);
#+end_src

** Ways To Specify Files To Tangle To
If a source block does not specify where to tangle to,

** Tangling From Multiple Files To The Same Destination
